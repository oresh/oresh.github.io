export function calculateInitialSquareSize(dimensions) {
    var min_square_size = 20;
    var max_square_size = 40;
    var min_x_space = 100;
    var min_y_space = 100;
    var working_area_width = dimensions.window_width - min_x_space;
    var working_area_height = dimensions.window_height - min_y_space;
    var x_square_size = working_area_width / (dimensions.image_width);
    var y_square_size = working_area_height / (dimensions.image_height);
    var proposed_square_size = (x_square_size < y_square_size) ? x_square_size : y_square_size;
    if (proposed_square_size < min_square_size)
        return min_square_size;
    if (proposed_square_size > max_square_size)
        return max_square_size;
    return Math.round(proposed_square_size);
}
export function calculateOffset(scale) {
    var offset = {
        x: 0,
        y: 0
    };
    var scaled_square_size = scale.image_scale * scale.square_size;
    var image_canvas_width = (scale.image_width) * scaled_square_size;
    var image_canvas_height = (scale.image_height) * scaled_square_size;
    offset.x = (scale.window_width - image_canvas_width) / 2;
    offset.y = (scale.window_height - image_canvas_height) / 2;
    return offset;
}
export function getGreyFromColor(hexColor) {
    if (hexColor == "#ffffff")
        return hexColor;
    var r = parseInt(hexColor.slice(1, 3), 16) / 255;
    var g = parseInt(hexColor.slice(3, 5), 16) / 255;
    var b = parseInt(hexColor.slice(5, 7), 16) / 255;
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var l = (max + min) / 2;
    var greyValue = 50 + Math.round(l * 155);
    var greyColor = "#".concat(greyValue.toString(16).padStart(2, '0').repeat(3));
    return greyColor;
}
export function getTextColor(hexColor) {
    var red = parseInt(hexColor.substring(0, 2), 16);
    var green = parseInt(hexColor.substring(2, 4), 16);
    var blue = parseInt(hexColor.substring(4, 6), 16);
    var brightness = (red * 299 + green * 587 + blue * 114) / 1000;
    return brightness >= 128 ? "#000000" : "#ffffff";
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4vc3JjLyIsInNvdXJjZXMiOlsidXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBWUEsTUFBTSxVQUFVLDBCQUEwQixDQUFDLFVBQTRCO0lBQ25FLElBQUksZUFBZSxHQUFHLEVBQUUsQ0FBQztJQUN6QixJQUFJLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDekIsSUFBSSxXQUFXLEdBQUcsR0FBRyxDQUFDO0lBQ3RCLElBQUksV0FBVyxHQUFHLEdBQUcsQ0FBQztJQUN0QixJQUFJLGtCQUFrQixHQUFHLFVBQVUsQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO0lBQy9ELElBQUksbUJBQW1CLEdBQUcsVUFBVSxDQUFDLGFBQWEsR0FBRyxXQUFXLENBQUM7SUFDakUsSUFBSSxhQUFhLEdBQUcsa0JBQWtCLEdBQUcsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbEUsSUFBSSxhQUFhLEdBQUcsbUJBQW1CLEdBQUcsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUM7SUFFcEUsSUFBSSxvQkFBb0IsR0FBRyxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUM7SUFDM0YsSUFBSSxvQkFBb0IsR0FBRyxlQUFlO1FBQUUsT0FBTyxlQUFlLENBQUM7SUFDbkUsSUFBSSxvQkFBb0IsR0FBRyxlQUFlO1FBQUUsT0FBTyxlQUFlLENBQUM7SUFFbkUsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUdELE1BQU0sVUFBVSxlQUFlLENBQUMsS0FBNkI7SUFDM0QsSUFBSSxNQUFNLEdBQUc7UUFDWCxDQUFDLEVBQUMsQ0FBQztRQUNILENBQUMsRUFBQyxDQUFDO0tBQ0osQ0FBQTtJQUNELElBQUksa0JBQWtCLEdBQUcsS0FBSyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDO0lBQy9ELElBQUksa0JBQWtCLEdBQUcsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsa0JBQWtCLENBQUM7SUFDbEUsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxrQkFBa0IsQ0FBQztJQUVwRSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6RCxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUUzRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLFFBQWdCO0lBRS9DLElBQUksUUFBUSxJQUFJLFNBQVM7UUFBRSxPQUFPLFFBQVEsQ0FBQztJQUMzQyxJQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ25ELElBQU0sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDbkQsSUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUVuRCxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDOUIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzlCLElBQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUkxQixJQUFNLFNBQVMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDM0MsSUFBTSxTQUFTLEdBQUcsV0FBSSxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7SUFHMUUsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsUUFBZTtJQUUxQyxJQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDbkQsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3JELElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUdwRCxJQUFNLFVBQVUsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEdBQUcsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBR2pFLE9BQU8sVUFBVSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDbkQsQ0FBQyJ9